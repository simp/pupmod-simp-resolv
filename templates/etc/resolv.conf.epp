<%- |
Variant[Boolean[false], Array[Simplib::IP,0,3]]     $nameservers = [],
Variant[Boolean[false], Array[Simplib::Domain,0,6]] $search      = [],
Variant[Boolean[false], Resolv::Sortlist]           $sortlist    = [],
Array[NotUndef]                                     $options     = [],
Variant[Boolean[false], Optional[Resolv::Domain]]   $domain      = undef,
|
-%>
rm #comment
<% if $nameservers == false { -%>
rm nameserver
<% } -%>
<% else { -%>
<%   unless empty($nameservers) { -%>
rm nameserver[.!="<%= $nameservers.join('" and .!="') %>"]
<%     $nameservers.each |$nameserver| { -%>
set nameserver[.="<%= $nameserver %>"] <%= $nameserver %>
<%     } -%>
<%   } -%>
<% } -%>
<% if $domain == false { -%>
rm domain
<% } -%>
<% if $search == false { -%>
rm search
<% } -%>
<% else { -%>
<%   unless empty($search) { -%>
rm search/domain[.!="<%= $search.join('" and .!="') %>"]
<%    $search.each |$search_domain| { -%>
set search/domain[.="<%= $search_domain %>"] <%= $search_domain %>
<%    } -%>
<%   } -%>
<% } -%>
<% if $sortlist == false { -%>
rm sortlist
<%  } -%>
<% else { -%>
<%   unless empty($sortlist) { -%>
<%    $sortlist.each |$item| { -%>
<%      if '/' in $item { -%>
<%        $item_parts = $item.split('/') -%>
set sortlist/ipaddr[.="<%= $item_parts[0] %>"] <%= $item_parts[0] %>
set sortlist/ipaddr["<%= $item_parts[0] %>"]/netmask <%= $item_parts[1] %>
<%      } -%>
<%      else { -%>
set sortlist/ipaddr["<%= $item %>"] <%= $item %>
<%      } -%>
<%    } -%>
<%    $_clean_sortlist = $sortlist.map |$item| { $item.split('/')[0] } -%>
rm sortlist/ipaddr[.!="<%= $_clean_sortlist.join('" and .!="') %>"]
<%   } -%>
<% } -%>
<%
filter($options) |$opt| {
  stdlib::start_with($opt, '--')
}.each |$opt| {
-%>
rm options/<%= split($opt, ':')[0][2,-1] %>
<% } -%>
<% unless empty($options) { -%>
defnode opts options ""
<% } -%>
<% $options.each |$opt| { -%>
<% if stdlib::start_with($opt, '--') { next () } -%>
<%  if ':' in $opt { -%>
<%    $opt_parts = $opt.split(':') -%>
set $opts/<%= $opt_parts[0] %> <%= $opt_parts[1] %>
<%  } -%>
<%  else { -%>
set $opts/<%= $opt %> ""
<%  } -%>
<% } -%>
rm options[count(*)=0]
